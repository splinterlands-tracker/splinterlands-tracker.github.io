{"version":3,"sources":["slices/ui-slice.js","components/header/header.js","components/loading/loading.js","common/currencies.js","api/api.js","helper/price.js","slices/summary-slice.js","components/settings/settings.js","components/card/card.js","slices/account-slice.js","components/account-list/account-list.js","components/add-account-modal/add-account-modal.js","pages/summary/summary.js","pages/card-list/card-list.js","pages/rented-cards/rented-cards.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["UISlice","createSlice","name","initialState","isLoading","darkTheme","currency","isShowSettings","reducers","state","action","payload","setTheme","setCurrency","Header","useDispatch","useHistory","class","id","href","type","Loading","useEffect","document","body","classList","add","remove","src","height","currencies","responseBody","response","data","request","url","axios","get","then","API","Price","getDECPrice","curr","getSPSPrice","Splinterlands","getPlayerBalance","username","getPlayerSettings","a","dec_price","resp","toLowerCase","catch","error","console","toast","toastId","sps_price","err","SummarySlice","form","show","total","accounts","dec","sps","s_sps","con_dec_price","con_sps_price","setForm","showForm","setTotal","Settings","dispatch","ui","useSelector","summary","useState","setDarkTheme","saveSettings","actions","settings","localStorage","setItem","JSON","stringify","className","htmlFor","value","onChange","e","target","Currencies","map","c","i","checked","onClick","Card","props","headerclass","header","style","minHeight","children","AccountSlice","addAccount","push","deleteAccount","filter","setAccounts","AccountList","backgroundColor","borderBottom","fnRefresh","overflow","ecr","rank","rating","toLocaleString","power","credits","untamed","quest_potion","gold_potion","legend_potion","filtered","parse","getItem","acc","AddAccountModal","inputRef","useRef","current","focus","ref","placeholder","autoComplete","onKeyUp","keyCode","fnAddAccount","Summary","getAccountDetails","length","forEach","account","token","balance","collection_power","curLeague","l","league","accountList","getAllAccounts","accountsArr","details","refresh","res","accountsList","init","setInterval","total_accounts","total_dec","total_sps","total_ssps","total_con_dec","total_con_sps","total_con_ssps","role","fontSize","color","marginRight","fontWeight","overflowWrap","size","success","navigator","clipboard","writeText","CardList","RentedCards","App","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2511f0ff.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    darkTheme : true,\r\n    currency  : 'PHP',\r\n    isShowSettings : false,\r\n}\r\nconst UISlice =  createSlice({\r\n    name: 'ui',\r\n    initialState :initialState,\r\n    reducers : {\r\n        isLoading(state, action) {\r\n            state.isLoading = action.payload\r\n        },\r\n        setTheme(state, action) {\r\n            state.darkTheme = action.payload\r\n        },\r\n        setCurrency(state, action) {\r\n            state.currency = action.payload;\r\n        },\r\n        isShowSettings(state, action){\r\n            state.isShowSettings = action.payload;\r\n        }\r\n    }\r\n})\r\n\r\nexport default UISlice;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport './header.css';\r\nimport UISlice from '../../slices/ui-slice'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const showSettings = () => {\r\n        dispatch(UISlice.actions.isShowSettings(true));\r\n    }\r\n    return (\r\n            <nav class=\"navbar navbar-expand-md bg-dark navbar-dark\" id=\"header\">\r\n                <a class=\"navbar-brand\" href=\"#\">Splinterlands Tracker</a>\r\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"/#/dashboard\">DASHBOARD</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"/#/cards\">CARDS</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" href=\"#/rented-cards\">RENTED CARDS</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {useEffect} from 'react';\r\nimport './loading.css';\r\n\r\n\r\nconst Loading = () => {\r\n\r\n    useEffect(()=> {\r\n        document.body.classList.add('modal-open');\r\n        return ()=>{document.body.classList.remove('modal-open');}\r\n    })\r\n\r\n    return (\r\n        <div id=\"loading\">\r\n\r\n            <div id=\"loading-container\">\r\n                <img src={process.env.PUBLIC_URL + '/img/loading.svg'} height=\"100\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","const currencies = [\r\n    'BRL',\r\n    'PHP',\r\n    'AED',\r\n    'ARS',\r\n    'AUD',\r\n    'CNY',\r\n    'EUR',\r\n    'GBP',\r\n    'HKD',\r\n    'IDR',\r\n    'INR',\r\n    'JPY',\r\n    'MYR',\r\n    'SGD',\r\n    'THB',\r\n    'TWD',\r\n    'USD',\r\n    'VES',\r\n    'VND',\r\n]\r\n\r\nexport default currencies","import axios from 'axios';\r\n\r\n// axios.defaults.baseURL = \"http://\";\r\n\r\n// axios.defaults.headers.common['xxapp-client-id'] = '92AE3F86-53F1-4919-B5AB-012454234808';\r\n\r\n// axios.defaults.withCredentials = true;\r\n\r\n// axios.interceptors.response.use(undefined, err => {\r\n//     const {status, data, config } = err.response;\r\n\r\n//     if (status === 401){\r\n//         toast.error('Unauthorized');\r\n//         window.location.reload();\r\n//     }\r\n// })\r\n\r\nconst responseBody = (response) => (response) ? response.data : null;\r\n\r\nconst request = {\r\n    get: (url) => axios.get(url).then(responseBody),\r\n    post: (url, body) => axios.post(url, body).then(responseBody),\r\n    postWithCancel: (url, body, cancelToken) => axios.post(url, body, cancelToken).then(responseBody),\r\n    put: (url, body) => axios.put(url, body).then(responseBody),\r\n    del: (url) => axios.delete(url).then(responseBody),\r\n    // postFormData :  (url, body) => {\r\n    //     return axios({\r\n    //         method: 'post',\r\n    //         url: url,\r\n    //         data: body,\r\n    //         headers: {'Content-Type': 'multipart/form-data' }\r\n    //         })\r\n    //     .then(responseBody)\r\n    // },\r\n    // postGetAttachment : (url, body) => {\r\n    //     return axios({\r\n    //         method: 'post',\r\n    //         url: url,\r\n    //         data: body,\r\n    //         responseType : 'blob'\r\n    //     })\r\n    //     .then(responseBody)\r\n    // }\r\n    }\r\n\r\n    const Price = {\r\n        getDECPrice : (curr) => request.get(\"https://api.coingecko.com/api/v3/simple/price?ids=dark-energy-crystals&vs_currencies=\"+ curr),\r\n        getSPSPrice : (curr) => request.get(\"https://api.coingecko.com/api/v3/simple/price?ids=splinterlands&vs_currencies=\"+curr)\r\n    }\r\n\r\n\r\n    const Splinterlands = {\r\n        getPlayerBalance    : (username) => request.get(`https://api.splinterlands.io/players/balances?username=${username}`),\r\n        getPlayerSettings   : (username) => request.get(`https://api.splinterlands.io/players/details?name=${username}`),\r\n    }\r\n    const API = {\r\n        Price,\r\n        Splinterlands\r\n    }\r\n\r\n    export default API;","import React from 'react';\r\nimport API from '../api/api';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport const getDECPrice = async(curr) => {\r\n    let dec_price = 0;\r\n    await API.Price.getDECPrice(curr)\r\n    .then(resp => {\r\n        dec_price = resp[\"dark-energy-crystals\"][`${curr.toLowerCase()}`];\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        toast.error(\"Unable to get DEC price.\", {toastId : 'DEC'});\r\n        return null;\r\n    });\r\n\r\n    return dec_price;\r\n}\r\n\r\nexport const getSPSPrice = async(curr) => {\r\n\r\n    let sps_price = 0;\r\n    await API.Price.getSPSPrice(curr)\r\n    .then(resp => {\r\n        sps_price = resp[\"splinterlands\"][`${curr.toLowerCase()}`];\r\n    })\r\n    .catch(err => {\r\n        console.error(err)\r\n        toast.error(\"Unable to get SPS Price.\", {toastId : 'SPS'});\r\n        return null;\r\n    });\r\n\r\n    return sps_price;\r\n\r\n}","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    form        : {username: \"\", show: false},\r\n    total       : {\r\n        accounts: 0,\r\n        dec: 0,\r\n        sps: 0,\r\n        s_sps: 0,\r\n        dec_price: 0,\r\n        sps_price: 0,\r\n        con_dec_price : 0,\r\n        con_sps_price : 0\r\n    }\r\n};\r\n\r\nconst SummarySlice = createSlice({\r\n    name            : 'summary',\r\n    initialState    : initialState,\r\n    reducers        : {\r\n        setForm(state, action){\r\n            state.form.username = action.payload\r\n        },\r\n        showForm(state, action){\r\n            state.form.show = action.payload\r\n        },\r\n        setTotal(state,action){\r\n            state.total = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport default SummarySlice;","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Currencies from '../../common/currencies';\r\nimport UISlice from '../../slices/ui-slice';\r\nimport {getDECPrice, getSPSPrice} from '../../helper/price';\r\nimport './settings.css'\r\nimport SummarySlice from '../../slices/summary-slice';\r\n\r\nconst Settings = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const ui = useSelector(state => state.ui);\r\n    const summary = useSelector(state => state.summary);\r\n    const [currency, setCurrency] = useState(ui.currency);\r\n    const [darkTheme, setDarkTheme] = useState(ui.darkTheme);\r\n\r\n    const hideSettings = () => {\r\n        dispatch(UISlice.actions.isShowSettings(false));\r\n    }\r\n\r\n    const onCurrencyChangeHandler = (e) => {\r\n        setCurrency(e.target.value);\r\n    }\r\n\r\n    const saveSettings = async() => {\r\n        dispatch(UISlice.actions.setCurrency(currency));\r\n        dispatch(UISlice.actions.setTheme(darkTheme))\r\n        dispatch(UISlice.actions.isShowSettings(false));\r\n\r\n        //save settings to localStorage\r\n        const settings = {currency : currency, darkTheme : darkTheme}\r\n        localStorage.setItem('settings', JSON.stringify(settings));\r\n\r\n        //update prices\r\n\r\n        let dec_price = await getDECPrice('USD');\r\n        let sps_price = await getSPSPrice('USD');\r\n\r\n        let con_dec_price = await getDECPrice(settings.currency);\r\n        let con_sps_price = await getSPSPrice(settings.currency);\r\n\r\n        dispatch(SummarySlice.actions.setTotal({\r\n            ...summary.total,\r\n            dec_price : dec_price,\r\n            sps_price : sps_price,\r\n            con_dec_price : con_dec_price,\r\n            con_sps_price : con_sps_price\r\n        }));\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        document.body.classList.add('modal-open');\r\n        return ()=>{document.body.classList.remove('modal-open');}\r\n    })\r\n\r\n    return (\r\n        <div id=\"settings\">\r\n            <div id=\"overlay\"></div>\r\n            <div id=\"main\">\r\n                <div id=\"form\">\r\n                    <div className=\"p-2\"><h5>Settings</h5></div>\r\n                    <div className='p-2 form-group'>\r\n                        <label htmlFor=\"currency\">Currency</label>\r\n                        <select className='form-control' id=\"currency\" name=\"currency\" value={currency}\r\n                        onChange={onCurrencyChangeHandler}>\r\n                            {Currencies.map((c, i) => {\r\n                                return <option value={c} key={i}>{c}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className='p-2'>\r\n                        <div className=\"form-check form-switch\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" checked={darkTheme} onChange={(e)=> setDarkTheme(e.target.checked)}/>\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <button className=\"btn btn-danger btn-sm m-1\" onClick={hideSettings}>Cancel</button>\r\n                        <button className=\"btn btn-success btn-sm m-1\" onClick={saveSettings}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;\r\n\r\n","import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className={`card ${props.className}`} {...props}>\r\n            <div className={`card-header ${props.headerclass}`}>{props.header}</div>\r\n            <div className=\"card-body\" style={{minHeight: '75px'}}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import {createSlice} from '@reduxjs/toolkit';\r\n\r\n\r\nconst initialState = [];\r\n\r\nconst AccountSlice = createSlice({\r\n    name            : 'accounts',\r\n    initialState    : initialState,\r\n    reducers       : {\r\n        addAccount(state, action){\r\n            state.push(action.payload);\r\n        },\r\n        deleteAccount(state, action){\r\n            let filtered = state.filter(a => a.username !== action.payload)\r\n            return filtered\r\n        },\r\n        setAccounts(state, action){\r\n            return action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport default AccountSlice;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport AccountSlice from '../../slices/account-slice';\r\nimport './account-list.css';\r\nimport SummarySlice from '../../slices/summary-slice'\r\n\r\nconst AccountList = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const summary = useSelector(state => state.summary);\r\n\r\n    return (\r\n        <div id=\"account-list\" className=\"w-100\" style={{backgroundColor: \"#444\"}}>\r\n            <div id=\"account-list-header\" className=\"p-2\" style={{borderBottom: \"1px solid #333\"}}>\r\n                <h5 className=\"text-white\">Account List</h5>\r\n                <div class='d-flex justify-content-end'>\r\n                    <button className=\"btn-sm btn-success m-1\" onClick={()=>{\r\n                        dispatch(SummarySlice.actions.showForm(true))\r\n                    }}>ADD</button>\r\n                    <button className=\"btn-sm btn-info m-1\" onClick={props.fnRefresh}>REFRESH</button>\r\n                    {/* <button className=\"btn-sm btn-warning m-1\">EXPORT</button> */}\r\n                </div>\r\n\r\n                \r\n            </div>\r\n            <div className=\"p-1 w-100\" style={{overflow: 'auto'}}>\r\n                <table className=\"table table-dark table-striped table-sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Username</th>\r\n                            <th>ECR</th>\r\n                            <th>Rank</th>\r\n                            <th>Rating</th>\r\n                            <th>Power</th>\r\n                            <th>In-game DEC</th>\r\n                            <th>SPS</th>\r\n                            <th>Staked SPS</th>\r\n                            <th>Credits</th>\r\n                            <th>Untamed Packs</th>\r\n                            <th>Quest Potion</th>\r\n                            <th>Gold Potion</th>\r\n                            <th>Legendary Potion</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.accounts.map((a, i) => (\r\n                            <tr key={i}>\r\n                                <td>{i+1}</td>\r\n                                <td>{a.username}</td>\r\n                                <td>{`${a.ecr}%`}</td>\r\n                                <td>{a.rank}</td>\r\n                                <td>{a.rating.toLocaleString()}</td>\r\n                                <td>{a.power.toLocaleString()}</td>\r\n                                <td>{a.dec.toLocaleString()}</td>\r\n                                <td>{a.sps.toLocaleString()}</td>\r\n                                <td>{a.s_sps.toLocaleString()}</td>\r\n                                <td>{a.credits.toLocaleString()}</td>\r\n                                <td>{a.untamed}</td>\r\n                                <td>{a.quest_potion.toLocaleString()}</td>\r\n                                <td>{a.gold_potion.toLocaleString()}</td>\r\n                                <td>{a.legend_potion.toLocaleString()}</td>\r\n                                <td><button className=\"btn-sm btn-danger\" onClick={() => {\r\n                                    dispatch(AccountSlice.actions.deleteAccount(a.username));\r\n\r\n                                    //delete in localStorage\r\n                                    let accountList = JSON.parse(localStorage.getItem('accounts'));\r\n                                    let filtered = accountList.filter(acc => acc !== a.username);\r\n                                    localStorage.setItem('accounts', JSON.stringify(filtered));\r\n                                }}>DELETE</button></td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AccountList;","import React, { useEffect, useRef } from 'react';\r\nimport './add-account-modal.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport SummarySlice from '../../slices/summary-slice';\r\n\r\n\r\nconst AddAccountModal = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const summary = useSelector(state => state.summary);\r\n    const inputRef = useRef();\r\n\r\n    const onChangeHandler = (e) => {\r\n        dispatch(SummarySlice.actions.setForm(e.target.value.toLowerCase()));\r\n    }\r\n\r\n\r\n\r\n    useEffect(()=> {\r\n        document.body.classList.add('modal-open');\r\n        if(inputRef.current) inputRef.current.focus();\r\n        return ()=>{document.body.classList.remove('modal-open');}\r\n    })\r\n    \r\n    return (\r\n        <div id=\"add-account-modal\">\r\n            <div id=\"overlay\"></div>\r\n\r\n            <div id=\"main\">\r\n                <div id=\"form\">\r\n                    <div className=\"p-2\">\r\n                        <h5 className=\"text-white\">Add Account</h5>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            name=\"username\"\r\n                            ref={inputRef}\r\n                            value={summary.form.username}\r\n                            onChange={onChangeHandler}\r\n                            placeholder=\"ENTER HIVE USERNAME\"\r\n                            autoComplete=\"off\"\r\n                            onKeyUp={(e) => {\r\n                                if(e.keyCode === 13) {\r\n                                    dispatch(SummarySlice.actions.setForm(\"\"));\r\n                                    dispatch(SummarySlice.actions.showForm(false));\r\n                                    props.fnAddAccount(summary.form.username);\r\n                                }\r\n                            }}/>\r\n                        <div className=\"d-flex justify-content-end p-2\">\r\n                            <button className=\"btn-sm btn-danger m-1\" onClick={()=>{\r\n                                dispatch(SummarySlice.actions.showForm(false))\r\n                            }}>Cancel</button>\r\n                            <button className=\"btn-sm btn-success m-1\" onClick={()=> {\r\n                                dispatch(SummarySlice.actions.setForm(\"\"));\r\n                                dispatch(SummarySlice.actions.showForm(false));\r\n                                props.fnAddAccount(summary.form.username);\r\n                            }}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddAccountModal;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './summary.css';\r\nimport Card from '../../components/card/card';\r\nimport API from '../../api/api';\r\nimport AccountList from '../../components/account-list/account-list';\r\nimport AccountSlice from '../../slices/account-slice';\r\nimport UISlice from '../../slices/ui-slice';\r\nimport AddAccountModal from '../../components/add-account-modal/add-account-modal';\r\nimport SummarySlice from '../../slices/summary-slice';\r\nimport { getDECPrice, getSPSPrice } from '../../helper/price';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineCopy } from 'react-icons/ai'\r\n\r\n\r\nconst Summary = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const accounts = useSelector((state) => state.accounts);\r\n    const ui = useSelector((state) => state.ui);\r\n    const summary = useSelector((state) => state.summary);\r\n\r\n    const getAccountDetails = async (username) => {\r\n        let dec = 0;\r\n        let sps = 0;\r\n        let s_sps = 0;\r\n        let quest_potion = 0;\r\n        let gold_potion = 0;\r\n        let legend_potion = 0;\r\n        let ecr = 0;\r\n        let untamed = 0;\r\n        let credits = 0;\r\n        let rating = 0;\r\n        let power = 0;\r\n        let rank = \"\";\r\n        let user_exist = false;\r\n\r\n\r\n        await API.Splinterlands.getPlayerBalance(username)\r\n            .then(resp => {\r\n                if (resp.length > 0) {\r\n                    user_exist = true;\r\n\r\n                    resp.forEach((account) => {\r\n                        if (account.token === \"DEC\") dec = account.balance\r\n                        else if (account.token === \"SPS\") sps = account.balance\r\n                        else if (account.token === \"SPSP\") s_sps = account.balance\r\n                        else if (account.token === \"ECR\") ecr = account.balance\r\n                        else if (account.token === \"QUEST\") quest_potion = account.balance\r\n                        else if (account.token === \"GOLD\") gold_potion = account.balance\r\n                        else if (account.token === \"LEGENDARY\") legend_potion = account.balance\r\n                        else if (account.token === \"UNTAMED\") untamed = account.balance\r\n                        else if (account.token === \"CREDITS\") credits = account.balance\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    toast.error(\"User does not exist.\")\r\n                    return;\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                toast.error(\"Unable to get player balance.\", {toastId : 'BALANCE'});\r\n                dispatch(UISlice.actions.isLoading(false));\r\n                return null;\r\n            });\r\n\r\n        await API.Splinterlands.getPlayerSettings(username)\r\n            .then(resp => {\r\n                power = resp.collection_power;\r\n                rating = resp.rating\r\n\r\n                const league = [\r\n                    { id: 0, name: 'Novice' },\r\n                    { id: 1, name: 'Bronze III' },\r\n                    { id: 2, name: 'Bronze II' },\r\n                    { id: 3, name: 'Bronze I' },\r\n                    { id: 4, name: 'Silver III' },\r\n                    { id: 5, name: 'Silver II' },\r\n                    { id: 6, name: 'Silver I' },\r\n                    { id: 7, name: 'Gold III' },\r\n                    { id: 8, name: 'Gold II' },\r\n                    { id: 9, name: 'Gold I' },\r\n                    { id: 10, name: 'Diamond III' },\r\n                    { id: 11, name: 'Diamond II' },\r\n                    { id: 12, name: 'Diamond I' },\r\n                    { id: 13, name: 'Champion III' },\r\n                    { id: 14, name: 'Champion II' },\r\n                    { id: 15, name: 'Champion I' },\r\n                ]\r\n\r\n                const curLeague = league.filter(l => l.id === resp.league);\r\n\r\n                rank = curLeague[0].name;\r\n\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                toast.error(\"Unable to get player details.\", {toastId : 'DETAILS'});\r\n                dispatch(UISlice.actions.isLoading(false));\r\n            })\r\n\r\n        return {\r\n            username: username,\r\n            credits: credits,\r\n            dec: dec,\r\n            sps: sps,\r\n            s_sps: s_sps,\r\n            untamed: untamed,\r\n            ecr: ecr / 100,\r\n            quest_potion: quest_potion,\r\n            gold_potion: gold_potion,\r\n            legend_potion: legend_potion,\r\n            power: power,\r\n            rating: rating,\r\n            rank: rank\r\n        }\r\n    }\r\n\r\n    const addAccount = async (username) => {\r\n\r\n        dispatch(UISlice.actions.isLoading(true));\r\n\r\n\r\n        const account = await getAccountDetails(username);\r\n\r\n        if (account) {\r\n            dispatch(AccountSlice.actions.addAccount(account));\r\n\r\n            let accountList = JSON.parse((localStorage.getItem('accounts')));\r\n\r\n            accountList.push(account.username);\r\n\r\n            localStorage.setItem('accounts', JSON.stringify(accountList));\r\n        }\r\n\r\n        dispatch(UISlice.actions.isLoading(false));\r\n        return;\r\n\r\n    }\r\n\r\n    const getAllAccounts = async (accounts) => {\r\n        let accountsArr = [];\r\n        for (const account of accounts) {\r\n            const details = await getAccountDetails(account);\r\n            accountsArr.push(details);\r\n        }\r\n\r\n        return accountsArr;\r\n    }\r\n\r\n    const refresh = async () => {\r\n        const accountList = JSON.parse(localStorage.getItem('accounts'));\r\n        dispatch(UISlice.actions.isLoading(true));\r\n        await getAllAccounts(accountList)\r\n            .then(res => {\r\n                dispatch(AccountSlice.actions.setAccounts(res));\r\n            });\r\n        dispatch(UISlice.actions.isLoading(false));\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            //get stored settings\r\n            let settings = JSON.parse(localStorage.getItem('settings'));\r\n            if (settings) {\r\n                dispatch(UISlice.actions.setCurrency(settings.currency));\r\n                dispatch(UISlice.actions.setTheme(settings.darkTheme));\r\n            }\r\n            else {\r\n                settings = { currency: ui.currency, darkTheme: ui.darkTheme };\r\n                localStorage.setItem('settings', JSON.stringify(settings));\r\n            }\r\n            //\r\n\r\n            //check prices\r\n\r\n            let dec_price = await getDECPrice('USD');\r\n            let sps_price = await getSPSPrice('USD');\r\n\r\n            let con_dec_price = await getDECPrice(settings.currency);\r\n            let con_sps_price = await getSPSPrice(settings.currency);\r\n\r\n            dispatch(SummarySlice.actions.setTotal({\r\n                ...summary.total,\r\n                dec_price: dec_price,\r\n                sps_price: sps_price,\r\n                con_dec_price: con_dec_price,\r\n                con_sps_price: con_sps_price\r\n            }))\r\n\r\n            let accountsList = JSON.parse(localStorage.getItem('accounts'));\r\n\r\n            if (accountsList) //retrieve details \r\n            {\r\n                dispatch(UISlice.actions.isLoading(true));\r\n                await getAllAccounts(accountsList)\r\n                    .then(res => {\r\n                        dispatch(AccountSlice.actions.setAccounts(res));\r\n                    });\r\n                dispatch(UISlice.actions.isLoading(false));\r\n            }\r\n            else // set accounts in localStorage\r\n            {\r\n                localStorage.setItem('accounts', '[]')\r\n            }\r\n        }\r\n\r\n        init();\r\n\r\n        //set timer to update every 5 mins\r\n        setInterval(async () => {\r\n            const settings = JSON.parse(localStorage.getItem('settings'));\r\n            //update dec and sps price\r\n            const dec_price = await getDECPrice('USD');\r\n            const sps_price = await getSPSPrice('USD');\r\n            let con_dec_price = await getDECPrice(settings.currency);\r\n            let con_sps_price = await getSPSPrice(settings.currency);\r\n\r\n            dispatch(SummarySlice.actions.setTotal({\r\n                ...summary.total,\r\n                dec_price: dec_price,\r\n                sps_price: sps_price,\r\n                con_dec_price: con_dec_price,\r\n                con_sps_price: con_sps_price\r\n            }));\r\n\r\n\r\n\r\n        }, 20000)\r\n    }, []);\r\n\r\n\r\n\r\n    //calculate total\r\n    let total_accounts = 0;\r\n    let total_dec = 0;\r\n    let total_sps = 0;\r\n    let total_ssps = 0;\r\n    let total_con_dec = 0;\r\n    let total_con_sps = 0;\r\n    let total_con_ssps = 0;\r\n\r\n    accounts.forEach(a => {\r\n        total_accounts++;\r\n        total_dec += a.dec;\r\n        total_sps += a.sps;\r\n        total_ssps += a.s_sps\r\n    })\r\n\r\n    total_con_dec = total_dec * summary.total.con_dec_price;\r\n    total_con_sps = total_sps * summary.total.con_sps_price;\r\n    total_con_ssps = total_ssps * summary.total.con_sps_price;\r\n\r\n    return (\r\n        <div id=\"summary\" className=\"p-3 container container-lg\">\r\n            {(summary.form.show) ? <AddAccountModal fnAddAccount={addAccount} /> : ''}\r\n            <div class='alert alert-success' role='alert'>\r\n                <h4 class='alert-heading'>Support us</h4>\r\n                <p class=\"mb-0\" style={{ fontSize: '1.2rem' }}>If you find this tool useful, We are accepting donations to further enhance this project. Any amount will do :)</p>\r\n                <div class=\"row\" style={{ fontSize: '1rem' }}>\r\n                    <label class=\"col-md-3\">METAMASK ADDRESS :</label>\r\n                    <div class=\"col-md-9\">\r\n                        <label style={{ color: '#fff', marginRight: '2px', fontWeight : 'bolder', overflowWrap: 'break-word'}}>0xEe3e386D43d0D44a7466da5aD7C8e713069ADa1C</label>\r\n                        <AiOutlineCopy class=\"icon\" size={18} onClick={e => {\r\n                            toast.success('Copied to Clipboard!');\r\n                            navigator.clipboard.writeText('0xEe3e386D43d0D44a7466da5aD7C8e713069ADa1C');\r\n                        }}/>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\" style={{ fontSize: '1rem' }}>\r\n                    <label class=\"col-md-3\">SPLINTERLANDS USERNAME :</label>\r\n                    <div class=\"col-md-9\">\r\n                        <label style={{ color: '#fff', marginRight: '2px', fontWeight: 'bolder' }}>toshihikosong</label>\r\n                        <AiOutlineCopy class=\"icon\" size={18} onClick={e => {\r\n                            toast.success('Copied to Clipboard!');\r\n                            navigator.clipboard.writeText('toshihikosong');\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"tiles-container\" className=\"row\">\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL ACCOUNT\" headerclass=\"text-center\" style={{ backgroundColor: \"#444\" }}>\r\n                        <div className=\"text-center\">\r\n                            <span className=\"total_account\">{total_accounts}</span>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL IN-GAME DEC\" headerclass=\"text-center\" style={{ backgroundColor: \"#444\" }}>\r\n                        <div className=\"text-center\">\r\n                            <span >{total_dec.toLocaleString()}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${total_con_dec.toLocaleString()})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL SPS\" headerclass=\"text-center\" style={{ backgroundColor: \"#444\" }}>\r\n                        <div className=\"text-center\">\r\n                            <span >{total_sps.toLocaleString()}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${total_con_sps.toLocaleString()})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"TOTAL STAKED SPS\" headerclass=\"text-center\" style={{ backgroundColor: \"#444\" }}>\r\n                        <div className=\"text-center\">\r\n                            <span >{total_ssps.toLocaleString()}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${total_con_ssps.toLocaleString()})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"CURRENT DEC PRICE\" headerclass=\"text-center\" style={{ backgroundColor: \"#444\" }}>\r\n                        <div className=\"text-center\">\r\n                            <span >{`$${summary.total.dec_price}`}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${summary.total.con_dec_price})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"tile col-md-4 p-2\">\r\n                    <Card className=\"text-white\" header=\"CURRENT SPS PRICE\" headerclass=\"text-center\" style={{ backgroundColor: \"#444\" }}>\r\n                        <div className=\"text-center\">\r\n                            <span >{`$${summary.total.sps_price}`}</span>\r\n                            <div className=\"price_conv\"><span>{`(${ui.currency} ${summary.total.con_sps_price})`}</span></div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"row p-2\">\r\n                <AccountList accounts={accounts} fnRefresh={refresh} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport './card-list.css';\r\n\r\nconst CardList = () => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center w-100 h-100\" id=\"card-list\">\r\n            <div id=\"main\">\r\n                <h5>Page is still under development...</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './rented-cards.css';\r\n\r\nconst RentedCards = () => {\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center w-100 h-100\" id=\"rented-cards\">\r\n            <div id=\"main\">\r\n                <h5>Page is still under development...</h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RentedCards;","import { useSelector } from 'react-redux';\nimport './App.css';\nimport Header from './components/header/header';\nimport Loading from './components/loading/loading';\nimport Settings from './components/settings/settings';\nimport Summary from './pages/summary/summary';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport CardList from './pages/card-list/card-list';\nimport RentedCards from './pages/rented-cards/rented-cards';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nfunction App() {\n\n  const ui = useSelector(state => state.ui);\n  return (\n    <div className=\"App\">\n      <ToastContainer\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme='dark'\n      />\n      {ui.isLoading && <Loading />}\n      {ui.isShowSettings && <Settings />}\n      <Header />\n      <Switch>\n        <Route exact path=\"/dashboard\">\n          <Summary />\n        </Route>\n        <Route exact path=\"/cards\">\n          <CardList />\n        </Route>\n        <Route exact path=\"/rented-cards\">\n          <RentedCards />\n        </Route>\n        <Route exact path=\"/pagenotfound\">\n          Page not found.\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/dashboard\" />\n        </Route>\n        <Route path=\"\"><Redirect to=\"/pagenotfound\" /></Route>\n      </Switch>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport AccountSlice from '../slices/account-slice';\r\nimport SummarySlice from '../slices/summary-slice';\r\nimport UISlice from '../slices/ui-slice';\r\n\r\nconst store = configureStore({\r\n    reducer : {\r\n        accounts    : AccountSlice.reducer,\r\n        ui          : UISlice.reducer,\r\n        summary     : SummarySlice.reducer\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport { HashRouter as Router, useLocation } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}